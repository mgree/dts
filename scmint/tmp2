
    val Pdat2command_or_definition : {and_fcn:'a list -> 'a,
                                      assign_fcn:string * 'a -> 'a,
                                      begin_fcn:'a list * 'a -> 'a,
                                      begindef_fcn:'b list -> 'b,
                                      call_fcn:'a * 'a list -> 'a,
                                      case_fcn:'a * 'c -> 'a,
                                      caseclause_fcn:('d list * ('a list * 'a)) * 'c -> 'c,
                                      casedefault_fcn:'a list * 'a -> 'c,
                                      command_fcn:'a -> 'e, 
                                      cond_fcn:'f -> 'a,
                                      condclause_fcn:'g * 'f -> 'f,
                                      conddefault_fcn:'a list * 'a -> 'f,
                                      datum_fcn:datum -> 'd,
                                      definition_fcn:'b -> 'e,
                                      delay_fcn:'a -> 'a,
                                      do_fcn:(string * 'a * 'a Option) list * 'a * ('a list * 'a) * 'a list -> 'a,
                                      fundef_fcn:string * 'h * ('b list * ('a list * 'a)) -> 'b,
                                      if_fcn:'a * 'a * 'a Option -> 'a,
                                      ilisttemp_fcn:'i list * 'j -> 'j,
                                      lambda_fcn:'h * ('b list * ('a list * 'a)) -> 'a,
                                      let_fcn:(string * 'a) list * ('b list * ('a list * 'a)) -> 'a,
                                      letrec_fcn:(string * 'a) list * ('b list * ('a list * 'a)) -> 'a,
                                      lets_fcn:(string * 'a) list * ('b list * ('a list * 'a)) -> 'a,
                                      listtemp_fcn:'i list -> 'j,
                                      literal_fcn:datum -> 'a,
                                      namedlet_fcn:string * (string * 'a) list * ('b list * ('a list * 'a)) -> 'a, 
                                      nullcase_fcn:'c,
                                      nullcond_fcn:'f, 
                                      nullpar_fcn:'h,
                                      or_fcn:'a list -> 'a,
                                      pairpar_fcn:string * 'h -> 'h,
                                      quasiquote_fcn:'j -> 'a,
                                      simpletemp_fcn:datum -> 'j,
                                      template_fcn:'j -> 'i, 
                                      test_fcn:'a -> 'g,
                                      testrec_fcn:'a * 'a -> 'g,
                                      testseq_fcn:'a * ('a list * 'a) -> 'g,
                                      unqspl_fcn:'a -> 'i,
                                      unquote_fcn:'a -> 'j,
                                      vardef_fcn:string * 'a -> 'b,
                                      variable_fcn:string -> 'a,
                                      varpar_fcn:string -> 'h,
                                      vectemp_fcn:'i list -> 'j}
                                     -> datum -> 'e
    
